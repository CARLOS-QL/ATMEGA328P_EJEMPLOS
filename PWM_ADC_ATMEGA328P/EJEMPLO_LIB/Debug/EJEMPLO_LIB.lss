
EJEMPLO_LIB.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000592  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000053e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000592  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005c4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000604  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008d5  00000000  00000000  0000067c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000770  00000000  00000000  00000f51  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000453  00000000  00000000  000016c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000009c  00000000  00000000  00001b14  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000038f  00000000  00000000  00001bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000e6  00000000  00000000  00001f3f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00002025  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 6f 00 	call	0xde	; 0xde <main>
  78:	0c 94 9d 02 	jmp	0x53a	; 0x53a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <ADC_init>:
#include "ADC.h"


void ADC_init(void)
{
	ADMUX |=  (1<<REFS0);		//Seleccionar el voltaje de referencia
  80:	ec e7       	ldi	r30, 0x7C	; 124
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	80 81       	ld	r24, Z
  86:	80 64       	ori	r24, 0x40	; 64
  88:	80 83       	st	Z, r24
	ADMUX &=~ (1<<REFS1);
  8a:	80 81       	ld	r24, Z
  8c:	8f 77       	andi	r24, 0x7F	; 127
  8e:	80 83       	st	Z, r24
	ADMUX &=~ (1<<ADLAR);		//Ajustar el resultado
  90:	80 81       	ld	r24, Z
  92:	8f 7d       	andi	r24, 0xDF	; 223
  94:	80 83       	st	Z, r24

	ADCSRA |= (1<<ADPS0);		// divisor = 128  16000/128 = 125 KHz
  96:	ea e7       	ldi	r30, 0x7A	; 122
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	80 81       	ld	r24, Z
  9c:	81 60       	ori	r24, 0x01	; 1
  9e:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADPS1);
  a0:	80 81       	ld	r24, Z
  a2:	82 60       	ori	r24, 0x02	; 2
  a4:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADPS2);
  a6:	80 81       	ld	r24, Z
  a8:	84 60       	ori	r24, 0x04	; 4
  aa:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN);		// Encendemos en ADC
  ac:	80 81       	ld	r24, Z
  ae:	80 68       	ori	r24, 0x80	; 128
  b0:	80 83       	st	Z, r24
  b2:	08 95       	ret

000000b4 <ADC_read>:
}


uint16_t ADC_read(uint8_t canal)
{
	canal&=0b00001111;				//Limitar la entrada a 5
  b4:	8f 70       	andi	r24, 0x0F	; 15
	ADMUX = (ADMUX & 0xF0)|canal;  //Limpiar los últimos 4 bits de ADMUX, OR con ch
  b6:	ec e7       	ldi	r30, 0x7C	; 124
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	90 81       	ld	r25, Z
  bc:	90 7f       	andi	r25, 0xF0	; 240
  be:	89 2b       	or	r24, r25
  c0:	80 83       	st	Z, r24
	ADCSRA|=(1<<ADSC);				//Inicia la conversión
  c2:	ea e7       	ldi	r30, 0x7A	; 122
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	80 64       	ori	r24, 0x40	; 64
  ca:	80 83       	st	Z, r24
	while((ADCSRA)&(1<<ADSC));		//Hasta que se complete la coversión
  cc:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  d0:	86 fd       	sbrc	r24, 6
  d2:	fc cf       	rjmp	.-8      	; 0xcc <ADC_read+0x18>
	return(ADC);					//devuelve el valor del adc
  d4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  d8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
  dc:	08 95       	ret

000000de <main>:


int main(void)
{
  
   DDRD = 0XFF;
  de:	8f ef       	ldi	r24, 0xFF	; 255
  e0:	8a b9       	out	0x0a, r24	; 10
   PWM0_init();
  e2:	0e 94 94 00 	call	0x128	; 0x128 <PWM0_init>
   ADC_init();
  e6:	0e 94 40 00 	call	0x80	; 0x80 <ADC_init>
   
  
   PWM0_dcb(10, INVERTING);
  ea:	60 e0       	ldi	r22, 0x00	; 0
  ec:	8a e0       	ldi	r24, 0x0A	; 10
  ee:	0e 94 c0 00 	call	0x180	; 0x180 <PWM0_dcb>
    while (1) 
    {
		float adc = ADC_read(1);
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	0e 94 5a 00 	call	0xb4	; 0xb4 <ADC_read>
  f8:	bc 01       	movw	r22, r24
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <__floatunsisf>
		adc = (adc * 100)/1023;
 102:	20 e0       	ldi	r18, 0x00	; 0
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	48 ec       	ldi	r20, 0xC8	; 200
 108:	52 e4       	ldi	r21, 0x42	; 66
 10a:	0e 94 08 02 	call	0x410	; 0x410 <__mulsf3>
 10e:	20 e0       	ldi	r18, 0x00	; 0
 110:	30 ec       	ldi	r19, 0xC0	; 192
 112:	4f e7       	ldi	r20, 0x7F	; 127
 114:	54 e4       	ldi	r21, 0x44	; 68
 116:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <__divsf3>
		PWM0_dca((uint8_t)adc, NO_INVERTING);
 11a:	0e 94 4b 01 	call	0x296	; 0x296 <__fixunssfsi>
 11e:	86 2f       	mov	r24, r22
 120:	61 e0       	ldi	r22, 0x01	; 1
 122:	0e 94 a7 00 	call	0x14e	; 0x14e <PWM0_dca>
 126:	e5 cf       	rjmp	.-54     	; 0xf2 <main+0x14>

00000128 <PWM0_init>:
#include "PWM0.h"

void PWM0_init(void)
{
	// Modo Fast PWM
	TCCR0B &= ~(1<<WGM02);
 128:	85 b5       	in	r24, 0x25	; 37
 12a:	87 7f       	andi	r24, 0xF7	; 247
 12c:	85 bd       	out	0x25, r24	; 37
	TCCR0A |= (1<<WGM01);
 12e:	84 b5       	in	r24, 0x24	; 36
 130:	82 60       	ori	r24, 0x02	; 2
 132:	84 bd       	out	0x24, r24	; 36
	TCCR0A |= (1<<WGM00);
 134:	84 b5       	in	r24, 0x24	; 36
 136:	81 60       	ori	r24, 0x01	; 1
 138:	84 bd       	out	0x24, r24	; 36
	
	// Prescalador 64
	TCCR0B &= ~(1<<CS02);
 13a:	85 b5       	in	r24, 0x25	; 37
 13c:	8b 7f       	andi	r24, 0xFB	; 251
 13e:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= (1<<CS01);
 140:	85 b5       	in	r24, 0x25	; 37
 142:	82 60       	ori	r24, 0x02	; 2
 144:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= (1<<CS00);
 146:	85 b5       	in	r24, 0x25	; 37
 148:	81 60       	ori	r24, 0x01	; 1
 14a:	85 bd       	out	0x25, r24	; 37
 14c:	08 95       	ret

0000014e <PWM0_dca>:
}

void PWM0_dca(uint8_t dc, uint8_t modo)
{
	if(modo == 1)
 14e:	61 30       	cpi	r22, 0x01	; 1
 150:	39 f4       	brne	.+14     	; 0x160 <PWM0_dca+0x12>
	{
		TCCR0A |= (1<<COM0A1);
 152:	94 b5       	in	r25, 0x24	; 36
 154:	90 68       	ori	r25, 0x80	; 128
 156:	94 bd       	out	0x24, r25	; 36
		TCCR0A &= ~(1<<COM0A0);
 158:	94 b5       	in	r25, 0x24	; 36
 15a:	9f 7b       	andi	r25, 0xBF	; 191
 15c:	94 bd       	out	0x24, r25	; 36
 15e:	06 c0       	rjmp	.+12     	; 0x16c <PWM0_dca+0x1e>
	}
	else
	{
		TCCR0A |= (1<<COM0A1);
 160:	94 b5       	in	r25, 0x24	; 36
 162:	90 68       	ori	r25, 0x80	; 128
 164:	94 bd       	out	0x24, r25	; 36
		TCCR0A |= (1<<COM0A0);
 166:	94 b5       	in	r25, 0x24	; 36
 168:	90 64       	ori	r25, 0x40	; 64
 16a:	94 bd       	out	0x24, r25	; 36
		
	}
	OCR0A = (dc * 255) / 100;
 16c:	2f ef       	ldi	r18, 0xFF	; 255
 16e:	82 9f       	mul	r24, r18
 170:	c0 01       	movw	r24, r0
 172:	11 24       	eor	r1, r1
 174:	64 e6       	ldi	r22, 0x64	; 100
 176:	70 e0       	ldi	r23, 0x00	; 0
 178:	0e 94 75 02 	call	0x4ea	; 0x4ea <__divmodhi4>
 17c:	67 bd       	out	0x27, r22	; 39
 17e:	08 95       	ret

00000180 <PWM0_dcb>:
}

void PWM0_dcb(uint8_t dc, uint8_t modo)
{
	if(modo == 1)
 180:	61 30       	cpi	r22, 0x01	; 1
 182:	39 f4       	brne	.+14     	; 0x192 <PWM0_dcb+0x12>
	{
		TCCR0A |= (1<<COM0B1);
 184:	94 b5       	in	r25, 0x24	; 36
 186:	90 62       	ori	r25, 0x20	; 32
 188:	94 bd       	out	0x24, r25	; 36
		TCCR0A &= ~(1<<COM0B0);
 18a:	94 b5       	in	r25, 0x24	; 36
 18c:	9f 7e       	andi	r25, 0xEF	; 239
 18e:	94 bd       	out	0x24, r25	; 36
 190:	06 c0       	rjmp	.+12     	; 0x19e <PWM0_dcb+0x1e>
	}
	else
	{
		TCCR0A |= (1<<COM0B1);
 192:	94 b5       	in	r25, 0x24	; 36
 194:	90 62       	ori	r25, 0x20	; 32
 196:	94 bd       	out	0x24, r25	; 36
		TCCR0A |= (1<<COM0B0);
 198:	94 b5       	in	r25, 0x24	; 36
 19a:	90 61       	ori	r25, 0x10	; 16
 19c:	94 bd       	out	0x24, r25	; 36
		
	}
	OCR0B = (dc * 255) / 100;
 19e:	2f ef       	ldi	r18, 0xFF	; 255
 1a0:	82 9f       	mul	r24, r18
 1a2:	c0 01       	movw	r24, r0
 1a4:	11 24       	eor	r1, r1
 1a6:	64 e6       	ldi	r22, 0x64	; 100
 1a8:	70 e0       	ldi	r23, 0x00	; 0
 1aa:	0e 94 75 02 	call	0x4ea	; 0x4ea <__divmodhi4>
 1ae:	68 bd       	out	0x28, r22	; 40
 1b0:	08 95       	ret

000001b2 <__divsf3>:
 1b2:	0e 94 ed 00 	call	0x1da	; 0x1da <__divsf3x>
 1b6:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__fp_round>
 1ba:	0e 94 c7 01 	call	0x38e	; 0x38e <__fp_pscB>
 1be:	58 f0       	brcs	.+22     	; 0x1d6 <__divsf3+0x24>
 1c0:	0e 94 c0 01 	call	0x380	; 0x380 <__fp_pscA>
 1c4:	40 f0       	brcs	.+16     	; 0x1d6 <__divsf3+0x24>
 1c6:	29 f4       	brne	.+10     	; 0x1d2 <__divsf3+0x20>
 1c8:	5f 3f       	cpi	r21, 0xFF	; 255
 1ca:	29 f0       	breq	.+10     	; 0x1d6 <__divsf3+0x24>
 1cc:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__fp_inf>
 1d0:	51 11       	cpse	r21, r1
 1d2:	0c 94 02 02 	jmp	0x404	; 0x404 <__fp_szero>
 1d6:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__fp_nan>

000001da <__divsf3x>:
 1da:	0e 94 df 01 	call	0x3be	; 0x3be <__fp_split3>
 1de:	68 f3       	brcs	.-38     	; 0x1ba <__divsf3+0x8>

000001e0 <__divsf3_pse>:
 1e0:	99 23       	and	r25, r25
 1e2:	b1 f3       	breq	.-20     	; 0x1d0 <__divsf3+0x1e>
 1e4:	55 23       	and	r21, r21
 1e6:	91 f3       	breq	.-28     	; 0x1cc <__divsf3+0x1a>
 1e8:	95 1b       	sub	r25, r21
 1ea:	55 0b       	sbc	r21, r21
 1ec:	bb 27       	eor	r27, r27
 1ee:	aa 27       	eor	r26, r26
 1f0:	62 17       	cp	r22, r18
 1f2:	73 07       	cpc	r23, r19
 1f4:	84 07       	cpc	r24, r20
 1f6:	38 f0       	brcs	.+14     	; 0x206 <__divsf3_pse+0x26>
 1f8:	9f 5f       	subi	r25, 0xFF	; 255
 1fa:	5f 4f       	sbci	r21, 0xFF	; 255
 1fc:	22 0f       	add	r18, r18
 1fe:	33 1f       	adc	r19, r19
 200:	44 1f       	adc	r20, r20
 202:	aa 1f       	adc	r26, r26
 204:	a9 f3       	breq	.-22     	; 0x1f0 <__divsf3_pse+0x10>
 206:	35 d0       	rcall	.+106    	; 0x272 <__divsf3_pse+0x92>
 208:	0e 2e       	mov	r0, r30
 20a:	3a f0       	brmi	.+14     	; 0x21a <__divsf3_pse+0x3a>
 20c:	e0 e8       	ldi	r30, 0x80	; 128
 20e:	32 d0       	rcall	.+100    	; 0x274 <__divsf3_pse+0x94>
 210:	91 50       	subi	r25, 0x01	; 1
 212:	50 40       	sbci	r21, 0x00	; 0
 214:	e6 95       	lsr	r30
 216:	00 1c       	adc	r0, r0
 218:	ca f7       	brpl	.-14     	; 0x20c <__divsf3_pse+0x2c>
 21a:	2b d0       	rcall	.+86     	; 0x272 <__divsf3_pse+0x92>
 21c:	fe 2f       	mov	r31, r30
 21e:	29 d0       	rcall	.+82     	; 0x272 <__divsf3_pse+0x92>
 220:	66 0f       	add	r22, r22
 222:	77 1f       	adc	r23, r23
 224:	88 1f       	adc	r24, r24
 226:	bb 1f       	adc	r27, r27
 228:	26 17       	cp	r18, r22
 22a:	37 07       	cpc	r19, r23
 22c:	48 07       	cpc	r20, r24
 22e:	ab 07       	cpc	r26, r27
 230:	b0 e8       	ldi	r27, 0x80	; 128
 232:	09 f0       	breq	.+2      	; 0x236 <__divsf3_pse+0x56>
 234:	bb 0b       	sbc	r27, r27
 236:	80 2d       	mov	r24, r0
 238:	bf 01       	movw	r22, r30
 23a:	ff 27       	eor	r31, r31
 23c:	93 58       	subi	r25, 0x83	; 131
 23e:	5f 4f       	sbci	r21, 0xFF	; 255
 240:	3a f0       	brmi	.+14     	; 0x250 <__divsf3_pse+0x70>
 242:	9e 3f       	cpi	r25, 0xFE	; 254
 244:	51 05       	cpc	r21, r1
 246:	78 f0       	brcs	.+30     	; 0x266 <__divsf3_pse+0x86>
 248:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__fp_inf>
 24c:	0c 94 02 02 	jmp	0x404	; 0x404 <__fp_szero>
 250:	5f 3f       	cpi	r21, 0xFF	; 255
 252:	e4 f3       	brlt	.-8      	; 0x24c <__divsf3_pse+0x6c>
 254:	98 3e       	cpi	r25, 0xE8	; 232
 256:	d4 f3       	brlt	.-12     	; 0x24c <__divsf3_pse+0x6c>
 258:	86 95       	lsr	r24
 25a:	77 95       	ror	r23
 25c:	67 95       	ror	r22
 25e:	b7 95       	ror	r27
 260:	f7 95       	ror	r31
 262:	9f 5f       	subi	r25, 0xFF	; 255
 264:	c9 f7       	brne	.-14     	; 0x258 <__divsf3_pse+0x78>
 266:	88 0f       	add	r24, r24
 268:	91 1d       	adc	r25, r1
 26a:	96 95       	lsr	r25
 26c:	87 95       	ror	r24
 26e:	97 f9       	bld	r25, 7
 270:	08 95       	ret
 272:	e1 e0       	ldi	r30, 0x01	; 1
 274:	66 0f       	add	r22, r22
 276:	77 1f       	adc	r23, r23
 278:	88 1f       	adc	r24, r24
 27a:	bb 1f       	adc	r27, r27
 27c:	62 17       	cp	r22, r18
 27e:	73 07       	cpc	r23, r19
 280:	84 07       	cpc	r24, r20
 282:	ba 07       	cpc	r27, r26
 284:	20 f0       	brcs	.+8      	; 0x28e <__divsf3_pse+0xae>
 286:	62 1b       	sub	r22, r18
 288:	73 0b       	sbc	r23, r19
 28a:	84 0b       	sbc	r24, r20
 28c:	ba 0b       	sbc	r27, r26
 28e:	ee 1f       	adc	r30, r30
 290:	88 f7       	brcc	.-30     	; 0x274 <__divsf3_pse+0x94>
 292:	e0 95       	com	r30
 294:	08 95       	ret

00000296 <__fixunssfsi>:
 296:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__fp_splitA>
 29a:	88 f0       	brcs	.+34     	; 0x2be <__fixunssfsi+0x28>
 29c:	9f 57       	subi	r25, 0x7F	; 127
 29e:	98 f0       	brcs	.+38     	; 0x2c6 <__fixunssfsi+0x30>
 2a0:	b9 2f       	mov	r27, r25
 2a2:	99 27       	eor	r25, r25
 2a4:	b7 51       	subi	r27, 0x17	; 23
 2a6:	b0 f0       	brcs	.+44     	; 0x2d4 <__fixunssfsi+0x3e>
 2a8:	e1 f0       	breq	.+56     	; 0x2e2 <__fixunssfsi+0x4c>
 2aa:	66 0f       	add	r22, r22
 2ac:	77 1f       	adc	r23, r23
 2ae:	88 1f       	adc	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	1a f0       	brmi	.+6      	; 0x2ba <__fixunssfsi+0x24>
 2b4:	ba 95       	dec	r27
 2b6:	c9 f7       	brne	.-14     	; 0x2aa <__fixunssfsi+0x14>
 2b8:	14 c0       	rjmp	.+40     	; 0x2e2 <__fixunssfsi+0x4c>
 2ba:	b1 30       	cpi	r27, 0x01	; 1
 2bc:	91 f0       	breq	.+36     	; 0x2e2 <__fixunssfsi+0x4c>
 2be:	0e 94 01 02 	call	0x402	; 0x402 <__fp_zero>
 2c2:	b1 e0       	ldi	r27, 0x01	; 1
 2c4:	08 95       	ret
 2c6:	0c 94 01 02 	jmp	0x402	; 0x402 <__fp_zero>
 2ca:	67 2f       	mov	r22, r23
 2cc:	78 2f       	mov	r23, r24
 2ce:	88 27       	eor	r24, r24
 2d0:	b8 5f       	subi	r27, 0xF8	; 248
 2d2:	39 f0       	breq	.+14     	; 0x2e2 <__fixunssfsi+0x4c>
 2d4:	b9 3f       	cpi	r27, 0xF9	; 249
 2d6:	cc f3       	brlt	.-14     	; 0x2ca <__fixunssfsi+0x34>
 2d8:	86 95       	lsr	r24
 2da:	77 95       	ror	r23
 2dc:	67 95       	ror	r22
 2de:	b3 95       	inc	r27
 2e0:	d9 f7       	brne	.-10     	; 0x2d8 <__fixunssfsi+0x42>
 2e2:	3e f4       	brtc	.+14     	; 0x2f2 <__fixunssfsi+0x5c>
 2e4:	90 95       	com	r25
 2e6:	80 95       	com	r24
 2e8:	70 95       	com	r23
 2ea:	61 95       	neg	r22
 2ec:	7f 4f       	sbci	r23, 0xFF	; 255
 2ee:	8f 4f       	sbci	r24, 0xFF	; 255
 2f0:	9f 4f       	sbci	r25, 0xFF	; 255
 2f2:	08 95       	ret

000002f4 <__floatunsisf>:
 2f4:	e8 94       	clt
 2f6:	09 c0       	rjmp	.+18     	; 0x30a <__floatsisf+0x12>

000002f8 <__floatsisf>:
 2f8:	97 fb       	bst	r25, 7
 2fa:	3e f4       	brtc	.+14     	; 0x30a <__floatsisf+0x12>
 2fc:	90 95       	com	r25
 2fe:	80 95       	com	r24
 300:	70 95       	com	r23
 302:	61 95       	neg	r22
 304:	7f 4f       	sbci	r23, 0xFF	; 255
 306:	8f 4f       	sbci	r24, 0xFF	; 255
 308:	9f 4f       	sbci	r25, 0xFF	; 255
 30a:	99 23       	and	r25, r25
 30c:	a9 f0       	breq	.+42     	; 0x338 <__floatsisf+0x40>
 30e:	f9 2f       	mov	r31, r25
 310:	96 e9       	ldi	r25, 0x96	; 150
 312:	bb 27       	eor	r27, r27
 314:	93 95       	inc	r25
 316:	f6 95       	lsr	r31
 318:	87 95       	ror	r24
 31a:	77 95       	ror	r23
 31c:	67 95       	ror	r22
 31e:	b7 95       	ror	r27
 320:	f1 11       	cpse	r31, r1
 322:	f8 cf       	rjmp	.-16     	; 0x314 <__floatsisf+0x1c>
 324:	fa f4       	brpl	.+62     	; 0x364 <__floatsisf+0x6c>
 326:	bb 0f       	add	r27, r27
 328:	11 f4       	brne	.+4      	; 0x32e <__floatsisf+0x36>
 32a:	60 ff       	sbrs	r22, 0
 32c:	1b c0       	rjmp	.+54     	; 0x364 <__floatsisf+0x6c>
 32e:	6f 5f       	subi	r22, 0xFF	; 255
 330:	7f 4f       	sbci	r23, 0xFF	; 255
 332:	8f 4f       	sbci	r24, 0xFF	; 255
 334:	9f 4f       	sbci	r25, 0xFF	; 255
 336:	16 c0       	rjmp	.+44     	; 0x364 <__floatsisf+0x6c>
 338:	88 23       	and	r24, r24
 33a:	11 f0       	breq	.+4      	; 0x340 <__floatsisf+0x48>
 33c:	96 e9       	ldi	r25, 0x96	; 150
 33e:	11 c0       	rjmp	.+34     	; 0x362 <__floatsisf+0x6a>
 340:	77 23       	and	r23, r23
 342:	21 f0       	breq	.+8      	; 0x34c <__floatsisf+0x54>
 344:	9e e8       	ldi	r25, 0x8E	; 142
 346:	87 2f       	mov	r24, r23
 348:	76 2f       	mov	r23, r22
 34a:	05 c0       	rjmp	.+10     	; 0x356 <__floatsisf+0x5e>
 34c:	66 23       	and	r22, r22
 34e:	71 f0       	breq	.+28     	; 0x36c <__floatsisf+0x74>
 350:	96 e8       	ldi	r25, 0x86	; 134
 352:	86 2f       	mov	r24, r22
 354:	70 e0       	ldi	r23, 0x00	; 0
 356:	60 e0       	ldi	r22, 0x00	; 0
 358:	2a f0       	brmi	.+10     	; 0x364 <__floatsisf+0x6c>
 35a:	9a 95       	dec	r25
 35c:	66 0f       	add	r22, r22
 35e:	77 1f       	adc	r23, r23
 360:	88 1f       	adc	r24, r24
 362:	da f7       	brpl	.-10     	; 0x35a <__floatsisf+0x62>
 364:	88 0f       	add	r24, r24
 366:	96 95       	lsr	r25
 368:	87 95       	ror	r24
 36a:	97 f9       	bld	r25, 7
 36c:	08 95       	ret

0000036e <__fp_inf>:
 36e:	97 f9       	bld	r25, 7
 370:	9f 67       	ori	r25, 0x7F	; 127
 372:	80 e8       	ldi	r24, 0x80	; 128
 374:	70 e0       	ldi	r23, 0x00	; 0
 376:	60 e0       	ldi	r22, 0x00	; 0
 378:	08 95       	ret

0000037a <__fp_nan>:
 37a:	9f ef       	ldi	r25, 0xFF	; 255
 37c:	80 ec       	ldi	r24, 0xC0	; 192
 37e:	08 95       	ret

00000380 <__fp_pscA>:
 380:	00 24       	eor	r0, r0
 382:	0a 94       	dec	r0
 384:	16 16       	cp	r1, r22
 386:	17 06       	cpc	r1, r23
 388:	18 06       	cpc	r1, r24
 38a:	09 06       	cpc	r0, r25
 38c:	08 95       	ret

0000038e <__fp_pscB>:
 38e:	00 24       	eor	r0, r0
 390:	0a 94       	dec	r0
 392:	12 16       	cp	r1, r18
 394:	13 06       	cpc	r1, r19
 396:	14 06       	cpc	r1, r20
 398:	05 06       	cpc	r0, r21
 39a:	08 95       	ret

0000039c <__fp_round>:
 39c:	09 2e       	mov	r0, r25
 39e:	03 94       	inc	r0
 3a0:	00 0c       	add	r0, r0
 3a2:	11 f4       	brne	.+4      	; 0x3a8 <__fp_round+0xc>
 3a4:	88 23       	and	r24, r24
 3a6:	52 f0       	brmi	.+20     	; 0x3bc <__fp_round+0x20>
 3a8:	bb 0f       	add	r27, r27
 3aa:	40 f4       	brcc	.+16     	; 0x3bc <__fp_round+0x20>
 3ac:	bf 2b       	or	r27, r31
 3ae:	11 f4       	brne	.+4      	; 0x3b4 <__fp_round+0x18>
 3b0:	60 ff       	sbrs	r22, 0
 3b2:	04 c0       	rjmp	.+8      	; 0x3bc <__fp_round+0x20>
 3b4:	6f 5f       	subi	r22, 0xFF	; 255
 3b6:	7f 4f       	sbci	r23, 0xFF	; 255
 3b8:	8f 4f       	sbci	r24, 0xFF	; 255
 3ba:	9f 4f       	sbci	r25, 0xFF	; 255
 3bc:	08 95       	ret

000003be <__fp_split3>:
 3be:	57 fd       	sbrc	r21, 7
 3c0:	90 58       	subi	r25, 0x80	; 128
 3c2:	44 0f       	add	r20, r20
 3c4:	55 1f       	adc	r21, r21
 3c6:	59 f0       	breq	.+22     	; 0x3de <__fp_splitA+0x10>
 3c8:	5f 3f       	cpi	r21, 0xFF	; 255
 3ca:	71 f0       	breq	.+28     	; 0x3e8 <__fp_splitA+0x1a>
 3cc:	47 95       	ror	r20

000003ce <__fp_splitA>:
 3ce:	88 0f       	add	r24, r24
 3d0:	97 fb       	bst	r25, 7
 3d2:	99 1f       	adc	r25, r25
 3d4:	61 f0       	breq	.+24     	; 0x3ee <__fp_splitA+0x20>
 3d6:	9f 3f       	cpi	r25, 0xFF	; 255
 3d8:	79 f0       	breq	.+30     	; 0x3f8 <__fp_splitA+0x2a>
 3da:	87 95       	ror	r24
 3dc:	08 95       	ret
 3de:	12 16       	cp	r1, r18
 3e0:	13 06       	cpc	r1, r19
 3e2:	14 06       	cpc	r1, r20
 3e4:	55 1f       	adc	r21, r21
 3e6:	f2 cf       	rjmp	.-28     	; 0x3cc <__fp_split3+0xe>
 3e8:	46 95       	lsr	r20
 3ea:	f1 df       	rcall	.-30     	; 0x3ce <__fp_splitA>
 3ec:	08 c0       	rjmp	.+16     	; 0x3fe <__fp_splitA+0x30>
 3ee:	16 16       	cp	r1, r22
 3f0:	17 06       	cpc	r1, r23
 3f2:	18 06       	cpc	r1, r24
 3f4:	99 1f       	adc	r25, r25
 3f6:	f1 cf       	rjmp	.-30     	; 0x3da <__fp_splitA+0xc>
 3f8:	86 95       	lsr	r24
 3fa:	71 05       	cpc	r23, r1
 3fc:	61 05       	cpc	r22, r1
 3fe:	08 94       	sec
 400:	08 95       	ret

00000402 <__fp_zero>:
 402:	e8 94       	clt

00000404 <__fp_szero>:
 404:	bb 27       	eor	r27, r27
 406:	66 27       	eor	r22, r22
 408:	77 27       	eor	r23, r23
 40a:	cb 01       	movw	r24, r22
 40c:	97 f9       	bld	r25, 7
 40e:	08 95       	ret

00000410 <__mulsf3>:
 410:	0e 94 1b 02 	call	0x436	; 0x436 <__mulsf3x>
 414:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__fp_round>
 418:	0e 94 c0 01 	call	0x380	; 0x380 <__fp_pscA>
 41c:	38 f0       	brcs	.+14     	; 0x42c <__mulsf3+0x1c>
 41e:	0e 94 c7 01 	call	0x38e	; 0x38e <__fp_pscB>
 422:	20 f0       	brcs	.+8      	; 0x42c <__mulsf3+0x1c>
 424:	95 23       	and	r25, r21
 426:	11 f0       	breq	.+4      	; 0x42c <__mulsf3+0x1c>
 428:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__fp_inf>
 42c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__fp_nan>
 430:	11 24       	eor	r1, r1
 432:	0c 94 02 02 	jmp	0x404	; 0x404 <__fp_szero>

00000436 <__mulsf3x>:
 436:	0e 94 df 01 	call	0x3be	; 0x3be <__fp_split3>
 43a:	70 f3       	brcs	.-36     	; 0x418 <__mulsf3+0x8>

0000043c <__mulsf3_pse>:
 43c:	95 9f       	mul	r25, r21
 43e:	c1 f3       	breq	.-16     	; 0x430 <__mulsf3+0x20>
 440:	95 0f       	add	r25, r21
 442:	50 e0       	ldi	r21, 0x00	; 0
 444:	55 1f       	adc	r21, r21
 446:	62 9f       	mul	r22, r18
 448:	f0 01       	movw	r30, r0
 44a:	72 9f       	mul	r23, r18
 44c:	bb 27       	eor	r27, r27
 44e:	f0 0d       	add	r31, r0
 450:	b1 1d       	adc	r27, r1
 452:	63 9f       	mul	r22, r19
 454:	aa 27       	eor	r26, r26
 456:	f0 0d       	add	r31, r0
 458:	b1 1d       	adc	r27, r1
 45a:	aa 1f       	adc	r26, r26
 45c:	64 9f       	mul	r22, r20
 45e:	66 27       	eor	r22, r22
 460:	b0 0d       	add	r27, r0
 462:	a1 1d       	adc	r26, r1
 464:	66 1f       	adc	r22, r22
 466:	82 9f       	mul	r24, r18
 468:	22 27       	eor	r18, r18
 46a:	b0 0d       	add	r27, r0
 46c:	a1 1d       	adc	r26, r1
 46e:	62 1f       	adc	r22, r18
 470:	73 9f       	mul	r23, r19
 472:	b0 0d       	add	r27, r0
 474:	a1 1d       	adc	r26, r1
 476:	62 1f       	adc	r22, r18
 478:	83 9f       	mul	r24, r19
 47a:	a0 0d       	add	r26, r0
 47c:	61 1d       	adc	r22, r1
 47e:	22 1f       	adc	r18, r18
 480:	74 9f       	mul	r23, r20
 482:	33 27       	eor	r19, r19
 484:	a0 0d       	add	r26, r0
 486:	61 1d       	adc	r22, r1
 488:	23 1f       	adc	r18, r19
 48a:	84 9f       	mul	r24, r20
 48c:	60 0d       	add	r22, r0
 48e:	21 1d       	adc	r18, r1
 490:	82 2f       	mov	r24, r18
 492:	76 2f       	mov	r23, r22
 494:	6a 2f       	mov	r22, r26
 496:	11 24       	eor	r1, r1
 498:	9f 57       	subi	r25, 0x7F	; 127
 49a:	50 40       	sbci	r21, 0x00	; 0
 49c:	9a f0       	brmi	.+38     	; 0x4c4 <__mulsf3_pse+0x88>
 49e:	f1 f0       	breq	.+60     	; 0x4dc <__mulsf3_pse+0xa0>
 4a0:	88 23       	and	r24, r24
 4a2:	4a f0       	brmi	.+18     	; 0x4b6 <__mulsf3_pse+0x7a>
 4a4:	ee 0f       	add	r30, r30
 4a6:	ff 1f       	adc	r31, r31
 4a8:	bb 1f       	adc	r27, r27
 4aa:	66 1f       	adc	r22, r22
 4ac:	77 1f       	adc	r23, r23
 4ae:	88 1f       	adc	r24, r24
 4b0:	91 50       	subi	r25, 0x01	; 1
 4b2:	50 40       	sbci	r21, 0x00	; 0
 4b4:	a9 f7       	brne	.-22     	; 0x4a0 <__mulsf3_pse+0x64>
 4b6:	9e 3f       	cpi	r25, 0xFE	; 254
 4b8:	51 05       	cpc	r21, r1
 4ba:	80 f0       	brcs	.+32     	; 0x4dc <__mulsf3_pse+0xa0>
 4bc:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__fp_inf>
 4c0:	0c 94 02 02 	jmp	0x404	; 0x404 <__fp_szero>
 4c4:	5f 3f       	cpi	r21, 0xFF	; 255
 4c6:	e4 f3       	brlt	.-8      	; 0x4c0 <__mulsf3_pse+0x84>
 4c8:	98 3e       	cpi	r25, 0xE8	; 232
 4ca:	d4 f3       	brlt	.-12     	; 0x4c0 <__mulsf3_pse+0x84>
 4cc:	86 95       	lsr	r24
 4ce:	77 95       	ror	r23
 4d0:	67 95       	ror	r22
 4d2:	b7 95       	ror	r27
 4d4:	f7 95       	ror	r31
 4d6:	e7 95       	ror	r30
 4d8:	9f 5f       	subi	r25, 0xFF	; 255
 4da:	c1 f7       	brne	.-16     	; 0x4cc <__mulsf3_pse+0x90>
 4dc:	fe 2b       	or	r31, r30
 4de:	88 0f       	add	r24, r24
 4e0:	91 1d       	adc	r25, r1
 4e2:	96 95       	lsr	r25
 4e4:	87 95       	ror	r24
 4e6:	97 f9       	bld	r25, 7
 4e8:	08 95       	ret

000004ea <__divmodhi4>:
 4ea:	97 fb       	bst	r25, 7
 4ec:	07 2e       	mov	r0, r23
 4ee:	16 f4       	brtc	.+4      	; 0x4f4 <__divmodhi4+0xa>
 4f0:	00 94       	com	r0
 4f2:	07 d0       	rcall	.+14     	; 0x502 <__divmodhi4_neg1>
 4f4:	77 fd       	sbrc	r23, 7
 4f6:	09 d0       	rcall	.+18     	; 0x50a <__divmodhi4_neg2>
 4f8:	0e 94 89 02 	call	0x512	; 0x512 <__udivmodhi4>
 4fc:	07 fc       	sbrc	r0, 7
 4fe:	05 d0       	rcall	.+10     	; 0x50a <__divmodhi4_neg2>
 500:	3e f4       	brtc	.+14     	; 0x510 <__divmodhi4_exit>

00000502 <__divmodhi4_neg1>:
 502:	90 95       	com	r25
 504:	81 95       	neg	r24
 506:	9f 4f       	sbci	r25, 0xFF	; 255
 508:	08 95       	ret

0000050a <__divmodhi4_neg2>:
 50a:	70 95       	com	r23
 50c:	61 95       	neg	r22
 50e:	7f 4f       	sbci	r23, 0xFF	; 255

00000510 <__divmodhi4_exit>:
 510:	08 95       	ret

00000512 <__udivmodhi4>:
 512:	aa 1b       	sub	r26, r26
 514:	bb 1b       	sub	r27, r27
 516:	51 e1       	ldi	r21, 0x11	; 17
 518:	07 c0       	rjmp	.+14     	; 0x528 <__udivmodhi4_ep>

0000051a <__udivmodhi4_loop>:
 51a:	aa 1f       	adc	r26, r26
 51c:	bb 1f       	adc	r27, r27
 51e:	a6 17       	cp	r26, r22
 520:	b7 07       	cpc	r27, r23
 522:	10 f0       	brcs	.+4      	; 0x528 <__udivmodhi4_ep>
 524:	a6 1b       	sub	r26, r22
 526:	b7 0b       	sbc	r27, r23

00000528 <__udivmodhi4_ep>:
 528:	88 1f       	adc	r24, r24
 52a:	99 1f       	adc	r25, r25
 52c:	5a 95       	dec	r21
 52e:	a9 f7       	brne	.-22     	; 0x51a <__udivmodhi4_loop>
 530:	80 95       	com	r24
 532:	90 95       	com	r25
 534:	bc 01       	movw	r22, r24
 536:	cd 01       	movw	r24, r26
 538:	08 95       	ret

0000053a <_exit>:
 53a:	f8 94       	cli

0000053c <__stop_program>:
 53c:	ff cf       	rjmp	.-2      	; 0x53c <__stop_program>
